# Generated by Django 5.0.4 on 2024-05-06 08:54

import client.utils
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter', models.CharField(max_length=20)),
                ('type_subject', models.CharField(choices=[('إعتراض', 'إعتراض'), ('إعادة عملي', 'إعادة عملي'), ('إعادة تصحيح', 'إعادة تصحيح'), ('إختيار مواد من السنة الأعلى', 'إختيار مواد من السنة الأعلى')], max_length=40)),
                ('created_at', models.DateField()),
                ('end_at', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Poster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phonenumber', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='SY')),
                ('image', models.ImageField(default='images/account. ', upload_to='images/users')),
                ('univercity_id', models.IntegerField(default=12, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Deferment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('السنة الأولى', 'السنة الأولى'), ('السنة الثانية', 'السنة الثانية'), ('السنة الثالثة', 'السنة الثالثة'), ('السنة الرابعة', 'السنة الرابعة'), ('السنة الخامسة', 'السنة الخامسة')], max_length=20)),
                ('department', models.CharField(blank=True, choices=[('برمجيات', 'برمجيات'), ('شبكات', 'شبكات')], max_length=20, null=True)),
                ('image_id', models.ImageField(upload_to='images/ID')),
                ('image_university', models.ImageField(upload_to='images/university')),
                ('photograph', models.ImageField(upload_to='images/photograph')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Objection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='اعتراض', max_length=20)),
                ('type_subject', models.CharField(choices=[('نظري', 'نظري'), ('عملي', 'عملي')], max_length=20)),
                ('year', models.CharField(choices=[('السنة الأولى', 'السنة الأولى'), ('السنة الثانية', 'السنة الثانية'), ('السنة الثالثة', 'السنة الثالثة'), ('السنة الرابعة', 'السنة الرابعة'), ('السنة الخامسة', 'السنة الخامسة')], max_length=20)),
                ('department', models.CharField(blank=True, choices=[('برمجيات', 'برمجيات'), ('شبكات', 'شبكات')], max_length=20, null=True)),
                ('subject', models.CharField(max_length=40)),
                ('teacher', models.CharField(max_length=40)),
                ('is_refusel', models.BooleanField(default=False)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.chapter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Permanence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('السنة الأولى', 'السنة الأولى'), ('السنة الثانية', 'السنة الثانية'), ('السنة الثالثة', 'السنة الثالثة'), ('السنة الرابعة', 'السنة الرابعة'), ('السنة الخامسة', 'السنة الخامسة')], max_length=20)),
                ('department', models.CharField(blank=True, choices=[('برمجيات', 'برمجيات'), ('شبكات', 'شبكات')], max_length=20, null=True)),
                ('image_id', models.ImageField(upload_to='images/ID')),
                ('image_university', models.ImageField(upload_to='images/university')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.CharField(max_length=1000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('poster', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='client.poster')),
            ],
        ),
        migrations.CreateModel(
            name='RefuselObjection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=10000)),
                ('objection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='client.objection')),
            ],
        ),
        migrations.CreateModel(
            name='RePractical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('السنة الأولى', 'السنة الأولى'), ('السنة الثانية', 'السنة الثانية'), ('السنة الثالثة', 'السنة الثالثة'), ('السنة الرابعة', 'السنة الرابعة'), ('السنة الخامسة', 'السنة الخامسة')], max_length=20)),
                ('department', models.CharField(blank=True, choices=[('برمجيات', 'برمجيات'), ('شبكات', 'شبكات')], max_length=20, null=True)),
                ('subject', models.CharField(max_length=40)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShoiceSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(choices=[('السنة الأولى', 'السنة الأولى'), ('السنة الثانية', 'السنة الثانية'), ('السنة الثالثة', 'السنة الثالثة'), ('السنة الرابعة', 'السنة الرابعة'), ('السنة الخامسة', 'السنة الخامسة')], max_length=20)),
                ('subject', models.CharField(max_length=40)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('code', models.IntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(default=client.utils.get_expiration_time)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
